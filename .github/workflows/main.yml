name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main  # or the branch you want to trigger the deployment from

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker images
        run: |
          docker build -t bharti153/frontend:latest ./frontend
          docker build -t bharti153/backend:latest ./backend

      - name: Push Docker images to Docker Hub
        run: |
          docker push bharti153/frontend:latest
          docker push bharti153/backend:latest

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Deploy to AWS Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-south-1
          APPLICATION_NAME: ardurtech
          ENVIRONMENT_NAME: Ardurtech-env
          VERSION_LABEL: ${{ github.sha }}
        run: |
          # Configure AWS CLI
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

          # Create a new application version
          aws elasticbeanstalk create-application-version --application-name $APPLICATION_NAME --version-label $VERSION_LABEL --source-bundle S3Bucket="ardur",S3Key="bundle.zip"

          # Update the environment to use the new version
          aws elasticbeanstalk update-environment --environment-name $ENVIRONMENT_NAME --version-label $VERSION_LABEL
